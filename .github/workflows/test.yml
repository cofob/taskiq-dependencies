name: Testing

on: [push, pull_request]

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md"]'
  lint:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        cmd:
          - black
          - flake8
          - isort
          - mypy
          - autoflake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Install deps
        run: poetry install
      - name: Run lint check
        run: poetry run pre-commit run -a ${{ matrix.cmd }}
  pytest:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    permissions:
      checks: write
      pull-requests: write
      contents: write
    strategy:
      matrix:
        py_version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, windows-latest]
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.py_version }}"
          cache: "poetry"
      - name: Install deps
        run: poetry install
      - name: Run pytest check
        run: poetry run pytest -vv -n auto --cov="taskiq_dependencies" .
